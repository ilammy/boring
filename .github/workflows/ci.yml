name: CI

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
      - test-targets-v3

env:
  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        thing:
        - arm64-android
        include:
        # FIXME: these targets fail to compile due to linker mismatch
        - thing: arm64-android
          target: aarch64-linux-android
          rust: stable
          os: ubuntu-latest
          test-type: run

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: Install Rust (rustup)
      run: rustup update ${{ matrix.rust }} --no-self-update && rustup default ${{ matrix.rust }}
      shell: bash
    - run: rustup target add ${{ matrix.target }}
    - name: Install nasm
      if: startsWith(matrix.os, 'windows')
      run: choco install nasm
      shell: cmd
    - name: Install LLVM and Clang
      if: startsWith(matrix.os, 'windows')
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: "11.0"
        directory: ${{ runner.temp }}/llvm
    - name: Set LIBCLANG_PATH
      if: startsWith(matrix.os, 'windows')
      run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
    - name: Setup Android cross environment
      if: startsWith(matrix.os, 'ubuntu') && endsWith(matrix.target, 'android')
      run: |
        find ${ANDROID_NDK_ROOT}/toolchains

        mkdir -p ~/.cargo
        cat > ~/.cargo/config.toml <<EOF
        [target.${{ matrix.target }}]
        linker = "${ANDROID_NDK_ROOT}/toolchains/toolchains/llvm/prebuilt/linux-x86_64/bin/clang"
        EOF
    - if: matrix.test-type == 'run-without-hyper'
      run: cargo test --target ${{ matrix.target }} --workspace --exclude tokio-boring --exclude hyper-boring
      name: Run tests (without hyper)
    - if: matrix.test-type == 'run'
      run: cargo test --target ${{ matrix.target }}
      name: Run tests
